// Copyright Â©2016 The ev3go Authors. All rights reserved.
// Use of this source code is governed by a BSD-style
// license that can be found in the LICENSE file.

package ev3dev

import (
	"testing"
	"time"
)

var buttonPollingTests = []struct {
	buf  []byte
	want Button
}{
	{
		buf: []byte{
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
		},
		// None.
	},
	{
		buf: []byte{
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
		},
		want: Left,
	},
	{
		buf: []byte{
			0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
		},
		want: Middle,
	},
	{
		buf: []byte{
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
		},
		want: Right,
	},
	{
		buf: []byte{
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x80, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
		},
		want: Up,
	},
	{
		buf: []byte{
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
		},
		want: Down,
	},
	{
		buf: []byte{
			0x00, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
		},
		want: Back,
	},
}

func TestButtonPolling(t *testing.T) {
	for i, p := range buttonPollingTests {
		got := getButton(p.buf)
		if got != p.want {
			t.Errorf("unexpected button for buffer %d: got:%d want:%d", i, got, p.want)
		}
	}
}

var buttonEventTests = []struct {
	buf  []byte
	want ButtonEvent
}{
	{
		buf: []byte{
			0x4c, 0x0e, 0x00, 0x00, 0x40, 0x42, 0x0f, 0x00,
			0x01, 0x00, 0x69, 0x00, 0x00, 0x00, 0x00, 0x00,
		},
		want: ButtonEvent{
			Button:    Left,
			TimeStamp: time.Hour + time.Minute + time.Second,

			Type: 1, Value: 0,
		},
	},
	{
		buf: []byte{
			0x4c, 0x0e, 0x00, 0x00, 0x40, 0x42, 0x0f, 0x00,
			0x01, 0x00, 0x69, 0x00, 0x01, 0x00, 0x00, 0x00,
		},
		want: ButtonEvent{
			Button:    Left,
			TimeStamp: time.Hour + time.Minute + time.Second,

			Type: 1, Value: 1,
		},
	},
	{
		buf: []byte{
			0x4c, 0x0e, 0x00, 0x00, 0x40, 0x42, 0x0f, 0x00,
			0x01, 0x00, 0x1c, 0x00, 0x00, 0x00, 0x00, 0x00,
		},
		want: ButtonEvent{
			Button:    Middle,
			TimeStamp: time.Hour + time.Minute + time.Second,

			Type: 1, Value: 0,
		},
	},
	{
		buf: []byte{
			0x4c, 0x0e, 0x00, 0x00, 0x40, 0x42, 0x0f, 0x00,
			0x01, 0x00, 0x1c, 0x00, 0x01, 0x00, 0x00, 0x00,
		},
		want: ButtonEvent{
			Button:    Middle,
			TimeStamp: time.Hour + time.Minute + time.Second,

			Type: 1, Value: 1,
		},
	},
	{
		buf: []byte{
			0x4c, 0x0e, 0x00, 0x00, 0x40, 0x42, 0x0f, 0x00,
			0x01, 0x00, 0x6a, 0x00, 0x00, 0x00, 0x00, 0x00,
		},
		want: ButtonEvent{
			Button:    Right,
			TimeStamp: time.Hour + time.Minute + time.Second,

			Type: 1, Value: 0,
		},
	},
	{
		buf: []byte{
			0x4c, 0x0e, 0x00, 0x00, 0x40, 0x42, 0x0f, 0x00,
			0x01, 0x00, 0x6a, 0x00, 0x01, 0x00, 0x00, 0x00,
		},
		want: ButtonEvent{
			Button:    Right,
			TimeStamp: time.Hour + time.Minute + time.Second,

			Type: 1, Value: 1,
		},
	},
	{
		buf: []byte{
			0x4c, 0x0e, 0x00, 0x00, 0x40, 0x42, 0x0f, 0x00,
			0x01, 0x00, 0x67, 0x00, 0x00, 0x00, 0x00, 0x00,
		},
		want: ButtonEvent{
			Button:    Up,
			TimeStamp: time.Hour + time.Minute + time.Second,

			Type: 1, Value: 0,
		},
	},
	{
		buf: []byte{
			0x4c, 0x0e, 0x00, 0x00, 0x40, 0x42, 0x0f, 0x00,
			0x01, 0x00, 0x67, 0x00, 0x01, 0x00, 0x00, 0x00,
		},
		want: ButtonEvent{
			Button:    Up,
			TimeStamp: time.Hour + time.Minute + time.Second,

			Type: 1, Value: 1,
		},
	},
	{
		buf: []byte{
			0x4c, 0x0e, 0x00, 0x00, 0x40, 0x42, 0x0f, 0x00,
			0x01, 0x00, 0x6c, 0x00, 0x00, 0x00, 0x00, 0x00,
		},
		want: ButtonEvent{
			Button:    Down,
			TimeStamp: time.Hour + time.Minute + time.Second,

			Type: 1, Value: 0,
		},
	},
	{
		buf: []byte{
			0x4c, 0x0e, 0x00, 0x00, 0x40, 0x42, 0x0f, 0x00,
			0x01, 0x00, 0x6c, 0x00, 0x01, 0x00, 0x00, 0x00,
		},
		want: ButtonEvent{
			Button:    Down,
			TimeStamp: time.Hour + time.Minute + time.Second,

			Type: 1, Value: 1,
		},
	},
	{
		buf: []byte{
			0x4c, 0x0e, 0x00, 0x00, 0x40, 0x42, 0x0f, 0x00,
			0x01, 0x00, 0x0e, 0x00, 0x00, 0x00, 0x00, 0x00,
		},
		want: ButtonEvent{
			Button:    Back,
			TimeStamp: time.Hour + time.Minute + time.Second,

			Type: 1, Value: 0,
		},
	},
	{
		buf: []byte{
			0x4c, 0x0e, 0x00, 0x00, 0x40, 0x42, 0x0f, 0x00,
			0x01, 0x00, 0x0e, 0x00, 0x01, 0x00, 0x00, 0x00,
		},
		want: ButtonEvent{
			Button:    Back,
			TimeStamp: time.Hour + time.Minute + time.Second,

			Type: 1, Value: 1,
		},
	},
	{
		buf: []byte{
			0x4c, 0x0e, 0x00, 0x00, 0x40, 0x42, 0x0f, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
		},
		want: ButtonEvent{
			Button:    0, // Undepress.
			TimeStamp: time.Hour + time.Minute + time.Second,

			Type: 0, Value: 0,
		},
	},
}

func TestButtonEvents(t *testing.T) {
	for i, e := range buttonEventTests {
		got := getEvent(e.buf)
		if got != e.want {
			t.Errorf("unexpected button event for buffer %d: got:%+v want:%+v", i, got, e.want)
		}
	}
}
